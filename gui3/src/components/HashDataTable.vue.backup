<template>

  <v-container fluid grid-list-md>

    <v-data-iterator
      :items="items"
      :rows-per-page-items="rowsPerPageItems"
      :pagination.sync="pagination"
      content-tag="v-layout"
      row
      wrap
    >

      <template v-slot:item="props">

        <v-flex
        >

          <v-card>

            <v-list dense>

              <v-list-tile v-for = "elem in props. item">

                <v-list-tile-content class="align-center">{{ elem. key }}</v-list-tile-content>

                <v-list-tile-content class="align-center">{{ elem. nameAviaCompany }}</v-list-tile-content>

                <v-list-tile-content class="align-center">{{ elem. destination }}</v-list-tile-content>

              </v-list-tile>

            </v-list>

          </v-card>
        </v-flex>
      </template>
    </v-data-iterator>
  </v-container>
</template>





<script>

  export default {

    "name": "HashDataTable",


    "data": function () {

      return {
        "rowsPerPageItems": [4, 8, 12],
        "pagination": {
          "rowsPerPage": 10,
        },
      };
    },


    "props": ["urlRequest"],


    "created": function () {

      this. $bus. $on ("HashDataSets", () => {

        this. $axios. get (urlRequest + "/table"). then ( req => {

          this. $store. commit ("openHashUpdate", req. data);

        });

      });

    },


  "mounted": function () {

alert (urlRequest);
      this. $axios. get (urlRequest + "/table"). then ( req => {

        this. $store. commit ("openHashUpdate", req. data);

      });

    },


    "computed": {

      "items": function () {

        return this. $store. state. datasets. openHash;

      },

    },

  };

</script>
